name: Build and Run Assembly Code

on:
  push:
    branches:
      - main

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install NASM
      run: sudo apt-get update && sudo apt-get install -y nasm gcc


    - name: Assemble the code, Link the object file, Run the program again
      run: |
        #!/bin/bash
        cd assembly_

        for asm_file in *.asm; do
            # Check if the file exists
            if [ -f "$asm_file" ]; then
                echo "Assembling and running $asm_file..."

                # Get the file name without the extension
                filename=$(basename -- "$asm_file")
                filename_noext="${filename%.*}"

                # Assemble the file using NASM (assuming it's x86-64, adjust for other architectures)
                nasm -f elf64 "$asm_file" -o "$filename_noext.o"
                
                # Link the object file to create an executable
                ld "$filename_noext.o" -o "$filename_noext"

                # Run the resulting executable
                ./"$filename_noext"

                # Clean up the object and executable files after running
                rm "$filename_noext.o" "$filename_noext"
            fi
        done

        cd assembly_gcc
        nasm -f elf64 -o bubble_sort.o bubble_sort.asm
        gcc -no-pie -o bubble_sort bubble_sort.o -lc
        ./bubble_sort

        cd ../..

    - name: Assemble the code, Link the object file, Run the program again inline
      run: |
       #!/bin/bash
       cd assembly_
       chmod +x run_asm.sh
       ./run_asm.sh
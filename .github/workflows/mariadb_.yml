name: MariaDB + sys_exec Example

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Wait for MariaDB to initialize
        run: |
          echo "Waiting for MariaDB to be ready..."
          for i in {1..30}; do
            mysqladmin ping -hmariadb -uroot -proot && break
            echo "MariaDB unavailable - sleeping"
            sleep 2
          done

      - name: Install build tools & compile sys_exec UDF
        run: |
          docker exec -i ${{ job.services.mariadb.id }} bash -c "
            apt-get update && \
            apt-get install -y mariadb-server-dev-11.4 build-essential git && \
            cd /tmp && \
            git clone https://github.com/mariadb-corporation/sys_exec_udf.git && \
            cd sys_exec_udf && \
            make && \
            mysql -uroot -proot -e \"CREATE FUNCTION sys_exec RETURNS int SONAME 'sys_exec_udf.so';\"
          "

      - name: Run SQL commands including sys.exec and sys_exec()
        run: |
          mysql -hmariadb -uroot -proot testdb <<'EOF'
          -- Create table using sys.exec
          CALL sys.exec('
              CREATE TABLE IF NOT EXISTS users (
                  id INT AUTO_INCREMENT PRIMARY KEY,
                  name VARCHAR(50),
                  age INT
              )
          ');

          -- Insert data using sys.exec
          CALL sys.exec('
              INSERT INTO users (name, age) VALUES (''Alice'', 30);
              INSERT INTO users (name, age) VALUES (''Bob'', 25);
          ');

          -- Select data normally
          SELECT * FROM users;

          -- Run OS command using sys_exec() UDF
          SELECT sys_exec('ls -la /tmp') AS files;
          EOF

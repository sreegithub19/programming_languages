name: Build and Deploy Kotlin/JS

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the 'main' branch
#   pull_request:
#     branches:
#       - main  # Trigger the workflow for pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK (required for Kotlin/JS projects)
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17' # Use Java 17 (or the version required for Kotlin)
        distribution: 'temurin'

    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2

    - name: Download CFR Decompiler
      run: |
        CFR_VERSION="0.152" # Check http://www.benf.org/other/cfr/ for the latest version
        CFR_URL="http://www.benf.org/other/cfr/cfr-${CFR_VERSION}.jar"
        mkdir -p ./.github/tools # Create a directory for tools
        wget -O ./.github/tools/cfr.jar "$CFR_URL"
        echo "CFR downloaded to ./.github/tools/cfr.jar"
        JAVA_CMD="java -jar ./.github/tools/cfr.jar"

    # Step 4: Build the Kotlin tutorial project using gradle
    - name: Build the Kotlin tutorial project using gradle
      run: |
       cd kotlin/KotlinProject
       ./gradlew clean build && ./gradlew run

    # Step 4: Build the Kotlin tutorial project using kotlinc (to convert to Java)
    - name: Build the Kotlin tutorial project using kotlinc (to convert to Java)
      run: |
       cd kotlin/KotlinProject
       ./gradlew copyDependencies
       jars=$(ls lib/*.jar | tr '\n' ':' | sed 's/:$//')
       kotlinc -cp "$jars" src/main/kotlin/Main.kt -d target/classes
       kotlin -cp "target/classes:$jars" org.example.MainKt

    # Step 4: Build the Kotlin/JS project
    - name: Build the Kotlin/JS project
      run: |
       cd kotlin/kotlin_js
       gradle browserProductionWebpack
       mv build/distributions/kotlin_js.js .

    - name: Upload file as artifact
      uses: actions/upload-artifact@v4
      with:
           name: captured-html-artifacts
           path: |
            kotlin/kotlin_js/index.html
            kotlin/kotlin_js/kotlin_js.js

    # # Step 5: Deploy to GitHub Pages (optional)
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: build/distributions  # Path to the built JavaScript files
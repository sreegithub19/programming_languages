name: Install cqlsh from Tarball

on:
  push:
    branches:
      - main

jobs:
  cassandra_setup:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install required dependencies
      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget python3 python3-pip python3-dev

      # Step 2: Download Cassandra tarball
      - name: Download Cassandra tarball
        run: |
          CASSANDRA_VERSION=4.0.14
          CASSANDRA_TARBALL="apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz"
          DOWNLOAD_URL="https://downloads.apache.org/cassandra/${CASSANDRA_VERSION}/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz"
          wget $DOWNLOAD_URL -O /tmp/$CASSANDRA_TARBALL

      # Step 3: Extract Cassandra tarball
      - name: Extract Cassandra tarball
        run: |
          tar -xzvf /tmp/apache-cassandra-4.0.14-bin.tar.gz -C /tmp/

      # Step 4: Install Python dependencies for cqlsh
      - name: Install Python dependencies for cqlsh
        run: |
          pip3 install requests PyYAML
          pip3 install --user six

      # Step 5: Start Cassandra manually
      - name: Start Cassandra
        run: |
          cd /tmp/apache-cassandra-4.0.14
          ./bin/cassandra -f &  # Run Cassandra in the foreground (background in CI/CD)

      # Step 6: Wait for Cassandra to be ready
      - name: Wait for Cassandra to be ready
        run: |
          echo "Waiting for Cassandra to be ready..."
          # Ensure we're in the correct directory before calling cqlsh
          until /tmp/apache-cassandra-4.0.14/bin/cqlsh -e "DESCRIBE KEYSPACES"; do
            echo "Waiting for Cassandra to start..."
            sleep 10
          done
          echo "Cassandra is ready."

      # Step 7: Create keyspace and table
      - name: Setup Cassandra Schema
        run: |
          echo "Creating keyspace and table..."
          /tmp/apache-cassandra-4.0.14/bin/cqlsh -e "
            CREATE KEYSPACE IF NOT EXISTS test_keyspace 
            WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};
            USE test_keyspace;
            CREATE TABLE IF NOT EXISTS users (
              id UUID PRIMARY KEY,
              name TEXT,
              email TEXT
            );
          "
          echo "Keyspace and table created."

      # Step 8: Insert test data
      - name: Insert Test Data into Cassandra
        run: |
          echo "Inserting test data into Cassandra..."
          /tmp/apache-cassandra-4.0.14/bin/cqlsh -e "
            USE test_keyspace;
            INSERT INTO users (id, name, email) VALUES (uuid(), 'John Doe', 'john@example.com');
            INSERT INTO users (id, name, email) VALUES (uuid(), 'Jane Smith', 'jane@example.com');
          "
          echo "Test data inserted."

      # Step 9: Query Cassandra
      - name: Query Cassandra
        run: |
          echo "Querying Cassandra for inserted data..."
          /tmp/apache-cassandra-4.0.14/bin/cqlsh -e "
            USE test_keyspace;
            SELECT * FROM users;
          "
